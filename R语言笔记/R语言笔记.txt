mean() 算数平均 Generic function for the (trimmed) arithmetic mean.

trim修剪，修正 
mean(x, trim = 0.1) #先把x的最大的10%的数和最小的10%的数去掉，然后剩下的数算平均。

mode（x） 判断x的类型，有numeric，character。。。

prod（x）  连乘

sd(x)  标准差

a[-5] a向量里隐藏第五个元素，只是隐藏，不删除

a[c(2,4,7)]  a中的元素，以第2,4,7组成为一个新向量

seq(5,20,by=2) 以5为起始元素，20为末尾元素，公差为2的向量

seq（2,20，length=10）以5为起始元素，20为末尾元素，总共10项的等差数列，具体每个元素值R自己算。指定了by就不能用length，两个会起冲突

letters[1:30]  #打印a到z字母，26到30没有值，显示NA

which（）{
	专门返回向量的下标

	which.max(a) # 返回a向量的最大值的下标
	a[which(a==2)] #返回a中=2的具体数值
}

rev() #反向排列

sort（） #按序排列

t(a) #对矩阵a进行转置

source（“D://h.r”） #用source函数执行r语言脚本，在脚本里面要写print（x）才能在控制台运行他时显示出来，只写x是不能输出的


a%*%b # a矩阵与b矩阵相乘

diag（a）#返回a矩阵对角线元素

diag（diag(a)）#返回对角线矩阵（即非对角线上的元素为零）

diag(4) # 返回4阶的对角线单位矩阵

rnorm(16) # 按照正态分布产生16个随机数

a=matrix（norm(16),4,4） #用正态分布产生的16个数，生成4*4的矩阵
 
solve（a） # 返回a的逆矩阵

solve(a,b) # 用solve函数解aX=b方程组

eigen（a） #求特征值

is.vector(x) #判断x是否是一个向量

is.array(x) #判断x是否是一个数组、

dim(x)->c(2,3) #把x变为2*3的矩阵 

矩阵与数据框的区别：矩阵里面都是数值型的，而数据框中不同的列可能是数值型，可能是字符型，或者布尔型

x=read.table("abc.txt")  #从外部读取文本文件

 x2=read.table("D://temp//abc.txt") #从非工作目录中读取文本文件

x=round(runif(100,min=80,max=100))#  round函数四舍五入，runif取100个均匀分布的随机数，下线是80，上线是100

x2=round(rnorm(100,mean=80,sd=7)) # 取100个正态分布的随机数，平均值是80，标准差是7，四舍五入

colMeans(x)[c("x1","x2","x3")] #计算数据框x中的列x1，列x2，列x3的平均值

apply（x,2,mean） # 参数一：指定数据框，
			参数二{1：行的方向上做操作； 2：列的方向上做操作}，	
				参数三：操作

apply(x[c("x1","x2","x3")],1,sum) #对数据框中指定列（行）做操作

hist(x$x1) # 画x中x1的直方图

plot(x$x2,x$x3) #画散点图，横轴x2，纵轴x1

table（x）#统计在向量x中的相同的元素及出现次数

pie（table（x$x1））#画饼图

plot(a,b,type="l")  #连线图